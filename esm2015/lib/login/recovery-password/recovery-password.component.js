import { Component, Inject, Output, EventEmitter } from '@angular/core';
import { FormControl, Validators } from '@angular/forms';
import { CONFIGLIBRARY } from '../../../config-library.interface';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "../services/auth.service";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/icon";
import * as i5 from "@angular/material/button";
import * as i6 from "@angular/material/input";
import * as i7 from "@angular/common";
import * as i8 from "../../../config-library.interface";
export class RecoveryPasswordComponent {
    constructor(configLibrary, fb, authService) {
        this.fb = fb;
        this.authService = authService;
        this.returnToLogin = new EventEmitter();
        this.restorePass = new EventEmitter();
    }
    ngOnInit() {
        this.loadForm();
    }
    loadForm() {
        this.recoveryForm = this.fb.group({
            email: new FormControl(null, [Validators.required, Validators.maxLength(50)])
        });
    }
    backtoLogin() {
        this.returnToLogin.emit(true);
    }
    restablecerPass() {
        if (this.recoveryForm.invalid) {
            this.restorePass.emit(false);
        }
        else {
            this.authResetPass();
        }
    }
    authResetPass() {
        this.authService.resetPassword(this.recoveryForm.value).subscribe(response => {
            this.restorePass.emit(true);
        }, error => {
            console.log(error);
            this.restorePass.emit(false);
        });
    }
}
RecoveryPasswordComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RecoveryPasswordComponent, deps: [{ token: CONFIGLIBRARY }, { token: i1.FormBuilder }, { token: i2.AuthenticationService }], target: i0.ɵɵFactoryTarget.Component });
RecoveryPasswordComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RecoveryPasswordComponent, selector: "lib-security-library-recovery-password", outputs: { returnToLogin: "returnToLogin", restorePass: "restorePass" }, ngImport: i0, template: "<div class=\"container\">\r\n  <div class=\"row form-content justify-content-start align-items-center\">\r\n    <form [formGroup]=\"recoveryForm\">\r\n      <div class=\"col col-xl-4 col-lg-8 col-md-8 col-12\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col col-12\">\r\n              <mat-label>Correo\r\n              </mat-label>\r\n              <mat-form-field [style.fontSize.px]=\"12\" appearance=\"outline\">\r\n                <mat-label>ejemplo@corrreo.com\r\n                </mat-label>\r\n                <mat-icon matSuffix>email</mat-icon>\r\n                <input matInput type=\"text\" placeholder=\"ejemplo@corrreo.com\" maxlength=\"50\" formControlName=\"email\"\r\n                  name=\"email\" id=\"email\" required>\r\n\r\n                <mat-error\r\n                  *ngIf=\"recoveryForm.get('email')?.hasError('required') && recoveryForm.get('email')?.touched\">\r\n                  Campo requerido\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col col-12\">\r\n              <button class=\"btn_primary\" (click)=\"restablecerPass()\">Restablecer</button>\r\n            </div>\r\n            <div class=\"col col-12 text-center\">\r\n              <button mat-button class=\"col-12 btn_tertiary\" (click)=\"backtoLogin()\">Regresar</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>", styles: [".btn_primary{color:#f8f9fb;text-transform:initial;text-align:center;background-color:#214eb7;text-decoration:none;border:0;border-radius:8px;cursor:pointer;letter-spacing:1.5px;width:100%!important;height:40px;padding:10px 8px;font-size:14px;font-weight:400}.btn_primary:hover{background-color:#01818f}.btn_primary:disabled{color:#828282;background-color:#b0b0b0;pointer-events:none}.btn_secondary{color:#01818f;text-transform:initial;text-align:center;background-color:#ecfafc;text-decoration:none;border:1px solid #0095A8;border-radius:8px;cursor:pointer;letter-spacing:1.5px;width:150px!important;height:40px;padding:10px 8px;font-size:14px;font-weight:400}.btn_secondary:hover{background-color:#b2eaf333}.btn_secondary:disabled{color:#b0b0b0;background-color:#e9e9e9;border:1px solid #e9e9e9;pointer-events:none}.btn_tertiary{color:#214eb7}.bg_breadcrumb{background:url(/assets/img/bg_breadcrumb.png) no-repeat;background-color:#005db4;background-size:contain;height:72px;padding-left:30px}.bg_breadcrumb .breadcrumb{color:#fff;margin:0;padding:0;font-style:normal;font-weight:600;letter-spacing:.02em;text-transform:capitalize;vertical-align:middle;line-height:58px}.bg_breadcrumb .breadcrumb span{font-size:18px;color:#bcd}.bg_breadcrumb .breadcrumb span:hover{color:#01818f;text-decoration:none}.bg_breadcrumb .breadcrumb li{list-style:none;float:left;margin:5px}.bg_breadcrumb .breadcrumb li:last-child{margin-right:5px}.bg_breadcrumb .breadcrumb li:after{content:\" > \";color:#fff}.bg_breadcrumb .breadcrumb li:last-child:after{content:\"\"}h1{font-size:34px;font-weight:500}h2{font-size:24px;font-weight:500}h3{font-size:20px;font-weight:500}h4{font-size:18px;font-weight:400}h5{font-style:normal!important;font-weight:500!important;font-size:12px!important;line-height:18px!important;letter-spacing:.15px!important;color:#3f4b6c!important}a{color:#118584}.swal2-styled.swal2-confirm{background-color:#0095a8!important}.swal2-styled.swal2-confirm:focus{box-shadow:none!important}.bg_evidence{background:rgba(249,249,249,.55);border:.5px solid #eceff2;box-sizing:border-box;height:261px;padding-left:25px;margin-left:25px;margin-right:25px}.date_evidence{font-style:normal;font-weight:500;font-size:12px;line-height:18px;text-align:center;letter-spacing:.155002px;color:#7792ac}.rb_evidence{display:flex;flex-direction:column;margin:15px 0;width:150px}.container_evidence{margin:4px,4px;padding:4px;overflow-x:auto;overflow-y:hidden;white-space:nowrap;width:100%}.card_evidence{width:170px;text-align:center}.lbl_evidence{font-style:normal;font-weight:500;font-size:12px;line-height:18px;letter-spacing:.15px;color:#3f4b6c}.mat-form-field-no-padding .mat-form-field-wrapper{margin-top:-.5em}.mobile-label{display:none}.mobile-cantidad>input{width:80%}@media (max-width: 600px){.mobile-label{width:130px;display:inline-block;font-weight:bold}.mat-header-row{display:none}.mat-row{flex-direction:column;align-items:start;text-align:left;padding:8px 24px}.mat-cell:first-of-type{padding:5px 10px!important}.mobile-cantidad{width:150px}}.container .form-content .title{font-family:var(--font-poppins-bold);font-style:normal;font-weight:500;font-size:26px;line-height:39px;text-transform:uppercase;color:#9399b2}.container mat-form-field.mat-form-field{width:100%;font-size:16px;color:#9399b2}.container mat-label{font-family:var(--font-roboto);font-style:normal;font-weight:700;font-size:14px;line-height:14px;letter-spacing:.15px;color:#656d8e}.text-center{display:grid}.login_title{font-family:\"Poppins\",\"Roboto\",sans-serif;font-style:normal;font-weight:500;font-size:26px;line-height:39px;text-transform:uppercase;color:#f8f9fb}.login_label{font-family:\"Roboto\",sans-serif;font-style:normal;font-weight:bold;font-size:12px;line-height:14px;letter-spacing:.15px;color:#f8f9fb}input::placeholder{font-family:\"Roboto\",sans-serif;font-style:normal;font-weight:500;font-size:14px;line-height:16px;letter-spacing:.15px;color:#9eb7cc}input:-webkit-autofill,input:-webkit-autofill:hover,input:-webkit-autofill:focus,input:-webkit-autofill:active{-webkit-transition:background-color 5000s;transition:background-color 5000s;-webkit-text-fill-color:#656D8E!important}\n"], components: [{ type: i3.MatFormField, selector: "mat-form-field", inputs: ["color", "floatLabel", "appearance", "hideRequiredMarker", "hintLabel"], exportAs: ["matFormField"] }, { type: i4.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i5.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i3.MatLabel, selector: "mat-label" }, { type: i3.MatSuffix, selector: "[matSuffix]" }, { type: i6.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["id", "disabled", "required", "type", "value", "readonly", "placeholder", "errorStateMatcher", "aria-describedby"], exportAs: ["matInput"] }, { type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i1.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.MatError, selector: "mat-error", inputs: ["id"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RecoveryPasswordComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'lib-security-library-recovery-password',
                    templateUrl: './recovery-password.component.html',
                    styleUrls: ['./recovery-password.component.scss']
                }]
        }], ctorParameters: function () { return [{ type: i8.IConfigLibrary, decorators: [{
                    type: Inject,
                    args: [CONFIGLIBRARY]
                }] }, { type: i1.FormBuilder }, { type: i2.AuthenticationService }]; }, propDecorators: { returnToLogin: [{
                type: Output
            }], restorePass: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVjb3ZlcnktcGFzc3dvcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc2VjdXJpdHktbGlicmFyeS9zcmMvbGliL2xvZ2luL3JlY292ZXJ5LXBhc3N3b3JkL3JlY292ZXJ5LXBhc3N3b3JkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3NlY3VyaXR5LWxpYnJhcnkvc3JjL2xpYi9sb2dpbi9yZWNvdmVyeS1wYXNzd29yZC9yZWNvdmVyeS1wYXNzd29yZC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBVSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFBZSxXQUFXLEVBQWEsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFHakYsT0FBTyxFQUFFLGFBQWEsRUFBa0IsTUFBTSxtQ0FBbUMsQ0FBQzs7Ozs7Ozs7OztBQVFsRixNQUFNLE9BQU8seUJBQXlCO0lBS3BDLFlBQ3lCLGFBQTZCLEVBQzVDLEVBQWUsRUFDZixXQUFrQztRQURsQyxPQUFFLEdBQUYsRUFBRSxDQUFhO1FBQ2YsZ0JBQVcsR0FBWCxXQUFXLENBQXVCO1FBUGxDLGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNuQyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFPdkMsQ0FBQztJQUdMLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVPLFFBQVE7UUFDZCxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDO1lBQ2hDLEtBQUssRUFBRSxJQUFJLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUM5RSxDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxlQUFlO1FBQ2IsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRTtZQUM3QixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtTQUM3QjthQUNJO1lBQ0gsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1NBQ3RCO0lBQ0gsQ0FBQztJQUVPLGFBQWE7UUFDbkIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxTQUFTLENBQy9ELFFBQVEsQ0FBQyxFQUFFO1lBQ1AsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEMsQ0FBQyxFQUNELEtBQUssQ0FBQyxFQUFFO1lBQ0wsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQTtZQUNsQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUMvQixDQUFDLENBQ0YsQ0FBQTtJQUNILENBQUM7O3VIQTdDVSx5QkFBeUIsa0JBTTFCLGFBQWE7MkdBTloseUJBQXlCLHVKQ1p0QyxpL0NBaUNNOzRGRHJCTyx5QkFBeUI7a0JBTHJDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHdDQUF3QztvQkFDbEQsV0FBVyxFQUFFLG9DQUFvQztvQkFDakQsU0FBUyxFQUFFLENBQUMsb0NBQW9DLENBQUM7aUJBQ2xEOzswQkFPSSxNQUFNOzJCQUFDLGFBQWE7MEdBTGIsYUFBYTtzQkFBdEIsTUFBTTtnQkFDRyxXQUFXO3NCQUFwQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QsIE9uSW5pdCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybUJ1aWxkZXIsIEZvcm1Db250cm9sLCBGb3JtR3JvdXAsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IEF1dGhlbnRpY2F0aW9uU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2F1dGguc2VydmljZSc7XHJcbmltcG9ydCB7IENPTkZJR0xJQlJBUlksIElDb25maWdMaWJyYXJ5IH0gZnJvbSAnLi4vLi4vLi4vY29uZmlnLWxpYnJhcnkuaW50ZXJmYWNlJztcclxuaW1wb3J0IFN3YWwgZnJvbSAnc3dlZXRhbGVydDInO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItc2VjdXJpdHktbGlicmFyeS1yZWNvdmVyeS1wYXNzd29yZCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3JlY292ZXJ5LXBhc3N3b3JkLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9yZWNvdmVyeS1wYXNzd29yZC5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBSZWNvdmVyeVBhc3N3b3JkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBAT3V0cHV0KCkgcmV0dXJuVG9Mb2dpbiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBAT3V0cHV0KCkgcmVzdG9yZVBhc3MgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgcHVibGljIHJlY292ZXJ5Rm9ybSE6IEZvcm1Hcm91cDtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBASW5qZWN0KENPTkZJR0xJQlJBUlkpIGNvbmZpZ0xpYnJhcnk6IElDb25maWdMaWJyYXJ5LFxyXG4gICAgcHJpdmF0ZSBmYjogRm9ybUJ1aWxkZXIsXHJcbiAgICBwcml2YXRlIGF1dGhTZXJ2aWNlOiBBdXRoZW50aWNhdGlvblNlcnZpY2UsXHJcbiAgKSB7IH1cclxuXHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5sb2FkRm9ybSgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBsb2FkRm9ybSgpIHtcclxuICAgIHRoaXMucmVjb3ZlcnlGb3JtID0gdGhpcy5mYi5ncm91cCh7XHJcbiAgICAgIGVtYWlsOiBuZXcgRm9ybUNvbnRyb2wobnVsbCwgW1ZhbGlkYXRvcnMucmVxdWlyZWQsIFZhbGlkYXRvcnMubWF4TGVuZ3RoKDUwKV0pXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgYmFja3RvTG9naW4oKSB7XHJcbiAgICB0aGlzLnJldHVyblRvTG9naW4uZW1pdCh0cnVlKTtcclxuICB9XHJcblxyXG4gIHJlc3RhYmxlY2VyUGFzcygpIHtcclxuICAgIGlmICh0aGlzLnJlY292ZXJ5Rm9ybS5pbnZhbGlkKSB7XHJcbiAgICAgIHRoaXMucmVzdG9yZVBhc3MuZW1pdChmYWxzZSlcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICB0aGlzLmF1dGhSZXNldFBhc3MoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXV0aFJlc2V0UGFzcygpe1xyXG4gICAgdGhpcy5hdXRoU2VydmljZS5yZXNldFBhc3N3b3JkKHRoaXMucmVjb3ZlcnlGb3JtLnZhbHVlKS5zdWJzY3JpYmUoXHJcbiAgICAgIHJlc3BvbnNlID0+IHtcclxuICAgICAgICAgIHRoaXMucmVzdG9yZVBhc3MuZW1pdCh0cnVlKTtcclxuICAgICAgfSxcclxuICAgICAgZXJyb3IgPT4ge1xyXG4gICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcclxuICAgICAgICAgdGhpcy5yZXN0b3JlUGFzcy5lbWl0KGZhbHNlKVxyXG4gICAgICB9XHJcbiAgICApXHJcbiAgfVxyXG5cclxufVxyXG4iLCI8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XHJcbiAgPGRpdiBjbGFzcz1cInJvdyBmb3JtLWNvbnRlbnQganVzdGlmeS1jb250ZW50LXN0YXJ0IGFsaWduLWl0ZW1zLWNlbnRlclwiPlxyXG4gICAgPGZvcm0gW2Zvcm1Hcm91cF09XCJyZWNvdmVyeUZvcm1cIj5cclxuICAgICAgPGRpdiBjbGFzcz1cImNvbCBjb2wteGwtNCBjb2wtbGctOCBjb2wtbWQtOCBjb2wtMTJcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyLWZsdWlkXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wgY29sLTEyXCI+XHJcbiAgICAgICAgICAgICAgPG1hdC1sYWJlbD5Db3JyZW9cclxuICAgICAgICAgICAgICA8L21hdC1sYWJlbD5cclxuICAgICAgICAgICAgICA8bWF0LWZvcm0tZmllbGQgW3N0eWxlLmZvbnRTaXplLnB4XT1cIjEyXCIgYXBwZWFyYW5jZT1cIm91dGxpbmVcIj5cclxuICAgICAgICAgICAgICAgIDxtYXQtbGFiZWw+ZWplbXBsb0Bjb3JycmVvLmNvbVxyXG4gICAgICAgICAgICAgICAgPC9tYXQtbGFiZWw+XHJcbiAgICAgICAgICAgICAgICA8bWF0LWljb24gbWF0U3VmZml4PmVtYWlsPC9tYXQtaWNvbj5cclxuICAgICAgICAgICAgICAgIDxpbnB1dCBtYXRJbnB1dCB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiZWplbXBsb0Bjb3JycmVvLmNvbVwiIG1heGxlbmd0aD1cIjUwXCIgZm9ybUNvbnRyb2xOYW1lPVwiZW1haWxcIlxyXG4gICAgICAgICAgICAgICAgICBuYW1lPVwiZW1haWxcIiBpZD1cImVtYWlsXCIgcmVxdWlyZWQ+XHJcblxyXG4gICAgICAgICAgICAgICAgPG1hdC1lcnJvclxyXG4gICAgICAgICAgICAgICAgICAqbmdJZj1cInJlY292ZXJ5Rm9ybS5nZXQoJ2VtYWlsJyk/Lmhhc0Vycm9yKCdyZXF1aXJlZCcpICYmIHJlY292ZXJ5Rm9ybS5nZXQoJ2VtYWlsJyk/LnRvdWNoZWRcIj5cclxuICAgICAgICAgICAgICAgICAgQ2FtcG8gcmVxdWVyaWRvXHJcbiAgICAgICAgICAgICAgICA8L21hdC1lcnJvcj5cclxuICAgICAgICAgICAgICA8L21hdC1mb3JtLWZpZWxkPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbCBjb2wtMTJcIj5cclxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuX3ByaW1hcnlcIiAoY2xpY2spPVwicmVzdGFibGVjZXJQYXNzKClcIj5SZXN0YWJsZWNlcjwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbCBjb2wtMTIgdGV4dC1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICA8YnV0dG9uIG1hdC1idXR0b24gY2xhc3M9XCJjb2wtMTIgYnRuX3RlcnRpYXJ5XCIgKGNsaWNrKT1cImJhY2t0b0xvZ2luKClcIj5SZWdyZXNhcjwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZm9ybT5cclxuICA8L2Rpdj5cclxuPC9kaXY+Il19